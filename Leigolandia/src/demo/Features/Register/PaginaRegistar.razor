@page "/register"
@inject HttpClient Http
@inject NavigationManager NavigationManager;
@using DataLayer

@inject IUtilizadorRepository utilizador

<PageTitle>Leigolândia</PageTitle>

<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@500&display=swap" rel="stylesheet">

<div class="pagina-registar">

    <div class="imagens">
        <img src="./images/scooter.jfif" class="painel" />
        <img src="./images/globo.jfif" class="painel" />
        <img src="./images/r2d2.jfif" class="painel" />
    </div>

    @* <input type="text" class="registar" id="morada" placeholder="Morada" required>
    <input type="number" class="registar" id="nif" placeholder="NIF" required>
    <button type="submit" class="entrar">Entrar</button> *@

    <div class="bloco-fundo">

        <form @onsubmit="HandleSubmit" id="regForm" action="">

            <h1 class="criar-conta">Criar Conta:</h1>

            <div class="tab">
                <span class="sub-titulo">Dados de Login:</span>
                <p><input type="text" class="registar" id="username" placeholder="Username..." required @bind="Username"></p>
                <p><input type="password" class="registar" id="password" name="password" placeholder="Password..." required @bind="Password"></p>
            </div>

            <div class="tab">
                <span class="sub-titulo">Informações Pessoais:</span>
                <p><input type="text" class="registar" id="nome" placeholder="Nome..." required @bind="Nome"></p>
                <p><input type="text" class="registar" id="data-nascimento" placeholder="Data de Nascimento..." required @bind="DataNascimento"></p>
            </div>

            <div class="tab">
                <span class="sub-titulo">Contactos:</span>
                <p><input type="email" class="registar" id="email" placeholder="E-mail..." required @bind="Email"></p>
                <p><input type="tel" class="registar" id="telemovel" placeholder="Telemovel..." required @bind="Telemovel"></p>
            </div>

            <div class="tab">
                <span class="sub-titulo">Informações Adicionais</span>
                <p><input type="text" class="registar" id="morada" placeholder="Morada..." required @bind="Morada"></p>
                <p><input type="number" class="registar" id="nif" placeholder="NIF..." required @bind="Nif"></p>
            </div>

            <div style="overflow:auto;">
                <div style="float:right;">
                    <button type="button" id="prevBtn" onclick="nextPrev(-1)">Anterior</button>
                    <button type="submit" id="nextBtn">Próximo</button>
                </div>
            </div>

            <span class="erro">@MensagemErro</span>

            <!-- Circles which indicates the steps of the form: -->
            <div style="text-align:center;margin-top:40px;">
                <span class="step"></span>
                <span class="step"></span>
                <span class="step"></span>
                <span class="step"></span>
            </div>

        </form>

    </div>

</div>

@code {
    private string Username { get; set; }
    private string Password { get; set; }
    private string Nome { get; set; }
    private string DataNascimento { get; set; }
    private string Email { get; set; }
    private string Telemovel { get; set; }
    private string Morada { get; set; }
    private string Nif { get; set; }
    private int IsAdministrador { get; set; }

    private string MensagemErro { get; set; }

    private async Task HandleSubmit()
    {
        bool sucesso = await utilizador.InsertUtilizador(Nome, Username, Password, DataNascimento, Telemovel, Email, Nif, Morada, 0);

        if (sucesso)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            MensagemErro = "Ocorreu um erro no seu registo, verifique os seus dados!";
        }
    }
}

<script>

    var currentTab = 0; // Current tab is set to be the first tab (0)
    showTab(currentTab); // Display the current tab

    function showTab(n) {
        // // This function will display the specified tab of the form ...
        // var x = document.getElementsByClassName("tab");
        // x[n].style.display = "block";
        // // ... and fix the Previous/Next buttons:
        // if (n == 0) {
        //     document.getElementById("prevBtn").style.display = "none";
        // } else {
        //     document.getElementById("prevBtn").style.display = "inline";
        // }
        // if (n == (x.length - 1)) {
        //     document.getElementById("nextBtn").innerHTML = "Registar";
        // } else {
        //     document.getElementById("nextBtn").innerHTML = "Próximo";
        // }
        // // ... and run a function that displays the correct step indicator:
        // fixStepIndicator(n)
        var x = document.getElementsByClassName("tab");
        if (n == (x.length - 1)) {
            document.getElementById("nextBtn").innerHTML = "Registar";
            document.getElementById("nextBtn").type = "submit";
            document.getElementById("nextBtn").setAttribute("onclick", null); // Remova o onclick
        } else {
            document.getElementById("nextBtn").innerHTML = "Próximo";
            document.getElementById("nextBtn").type = "button";
            document.getElementById("nextBtn").setAttribute("onclick", "nextPrev(1)"); // Adicione onclick
        }
        x[n].style.display = "block";
        if (n == 0) {
            document.getElementById("prevBtn").style.display = "none";
        } else {
            document.getElementById("prevBtn").style.display = "inline";
        }
        fixStepIndicator(n);
    }

    function nextPrev(n) {
        // This function will figure out which tab to display
        var x = document.getElementsByClassName("tab");
        // Exit the function if any field in the current tab is invalid:
        if (n == 1 && !validateForm()) return false;
        // Hide the current tab:
        x[currentTab].style.display = "none";
        // Increase or decrease the current tab by 1:
        currentTab = currentTab + n;
        // if you have reached the end of the form... :
        // if (currentTab >= x.length) {
        //     //...the form gets submitted:
        //     document.getElementById("regForm").submit();
        //     return false;
        // }
        // Otherwise, display the correct tab:
        showTab(currentTab);
    }

    function validateForm() {
        // This function deals with validation of the form fields
        var x, y, i, valid = true;
        x = document.getElementsByClassName("tab");
        y = x[currentTab].getElementsByTagName("input");
        // A loop that checks every input field in the current tab:
        for (i = 0; i < y.length; i++) {
            // If a field is empty...
            if (y[i].value == "") {
                // add an "invalid" class to the field:
                y[i].className += " invalid";
                // and set the current valid status to false:
                valid = false;
            }
        }
        // If the valid status is true, mark the step as finished and valid:
        if (valid) {
            document.getElementsByClassName("step")[currentTab].className += " finish";
        }
        return valid; // return the valid status
    }

    function fixStepIndicator(n) {
        // This function removes the "active" class of all steps...
        var i, x = document.getElementsByClassName("step");
        for (i = 0; i < x.length; i++) {
            x[i].className = x[i].className.replace(" active", "");
        }
        //... and adds the "active" class to the current step:
        x[n].className += " active";
    }

</script>